{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Synthesia Video Converter","text":"<p>Converts Synthesia video to MIDI, note sheets PDF and Music XML. Works with YouTube video links. Should work with any piano roll software, but tested on Synthesia. </p>"},{"location":"algorithm/","title":"Algorithm","text":""},{"location":"algorithm/#i-preprocessing","title":"I. Preprocessing","text":""},{"location":"algorithm/#1-input","title":"1. Input","text":"<p>On the input comes either a video with Synthesia (or any other piano roll) recording (directly imported into the script) or YouTube video link (video downloaded and processed as video input).</p>"},{"location":"algorithm/#2-clearing","title":"2. Clearing","text":"<p>Defining where intro, outro and other not related to the piano play parts of the video are and cutting them off (basically defining where actual play parts are).</p>"},{"location":"algorithm/#ii-processing","title":"II. Processing","text":""},{"location":"algorithm/#1-determining-the-pitch","title":"1. Determining the pitch","text":"<p>The audio is being processed to determine the pitch in which first left pressed key is played.  </p> <p>It is required as ofter in the video it is shown only a part of the keyboard and it's not clear what the first visible octave is without the audio.  </p>"},{"location":"algorithm/#2-defining-keys-played","title":"2. Defining keys played","text":"<p>The video is being processed via methods of Computer Vision to extract information about what keys to play, when, with what power and with which hand if possible to determine.  </p>"},{"location":"algorithm/#a-identifying-falling-keys-as-rectangles","title":"a. Identifying falling keys as rectangles","text":"<p>For this is used a threshold filter for creating an image mask and CV object detection.  </p>"},{"location":"algorithm/#b-defining-the-play-line","title":"b. Defining the play line","text":"<p>Defining the line where notes are played on an intersection with.  </p> <p>Defined by finding a line where falling keys disappear.</p>"},{"location":"algorithm/#c-determining-the-keyboard","title":"c. Determining the keyboard","text":"<p>Determining keys size and paddings between them.  </p> <p>Determined by rectangles size. The whole song should be analyzed to detect a correct size.</p>"},{"location":"algorithm/#d-falling-keys-are-marked-with-actual-musical-notes","title":"d. Falling keys are marked with actual musical notes","text":"<p>Each key is being marked with a pitch and a duration. The power with which keys should be pressed (a volume value) is determined via audio analysis.</p>"},{"location":"algorithm/#e-separating-keys-by-hand-played-with","title":"e. Separating keys by hand played with","text":"<p>Colors of keys in the video (if they are present) are used to determine different hands. It is possible to use player hands to determine what hands to use to press keys, but that's a hard challenge to deal with.</p>"},{"location":"algorithm/#iii-postprocessing","title":"III. Postprocessing","text":""},{"location":"algorithm/#1-saving-gathered-information","title":"1. Saving gathered information","text":"<p>The gathered information is being combined and saved in the MusicXML format (https://www.musicxml.com/).</p>"},{"location":"algorithm/#2-output","title":"2. Output","text":"<p>Using library music21 the MusicXML file is being converter into MIDI file and sheet music PDF that are the the output of the program.</p>"},{"location":"comparison-of-existing-solutions/","title":"Comparison of Existing Solutions","text":"<p>There are a lot of working solutions, but most of them work poorly so here is only a small subset.</p>"},{"location":"comparison-of-existing-solutions/#1-video2midi","title":"1. video2midi","text":"<p>The best solution I've found. Works using Computer Vision analyze.</p> <p>Has comfortable visual user interface to tweak things.</p> <p>YouTube: Creating MIDI from hybrid Synthesia Video. </p>"},{"location":"comparison-of-existing-solutions/#2-sheetesia","title":"2. sheetesia","text":""},{"location":"comparison-of-existing-solutions/#3-syn2midi","title":"3. syn2midi","text":""},{"location":"comparison-of-existing-solutions/#4-midi-converter","title":"4. MIDI-Converter","text":""},{"location":"comparison-of-existing-solutions/#5-pdf-omr-pmerge","title":"5. pdf-omr-pmerge","text":""},{"location":"comparison-of-existing-solutions/#7-synthesiavideo2midi","title":"7. synthesiavideo2midi","text":""},{"location":"comparison-of-existing-solutions/#8-desynthesia","title":"8. DeSynthesia","text":""},{"location":"comparison-of-existing-solutions/#9-pianoroll_to_midi","title":"9. pianoroll_to_midi","text":""},{"location":"comparison-of-existing-solutions/#10-johndoesstuff-getting-midi-from-synthesia-videos","title":"10. JohnDoesStuff - Getting MIDI from Synthesia videos","text":"<p>No stars as it's even not in a separate repository, but it is actually not a bad project and it's better then a lot of projects above.</p> <p>YouTube: Getting MIDI from Synthesia videos. </p>"},{"location":"project-structure/","title":"Project Structure","text":"<p>TODO</p> <pre><code>mkdocs.yml    # Docs configuration file.\ndocs/         # The documentation sources.\n</code></pre>"}]}